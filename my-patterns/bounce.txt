// licensed with CC BY-NC-SA 4.0 https://creativecommons.org/licenses/by-nc-sa/4.0/
// by Karsten Juschus, @joschi00@mastodon.social
// 
// Strudel version of https://club.tidalcycles.org/t/fun-bouncing-ball-rythmns-in-tidal/4456
//

await samples('github:tidalcycles/Dirt-Samples/master')

// from: https://github.com/tidalcycles/strudel/issues/344
function arrange(...sections) {
  const total = sections.reduce((sum, [cycles]) => sum + cycles, 0)
  sections = sections.map(([cycles, section]) => [cycles, section.fast(cycles)])
  return timeCat(...sections).slow(total)
}

// inspired by https://club.tidalcycles.org/t/fun-bouncing-ball-rythmns-in-tidal/4456
const bounceWith = (times, time, loss, func, pat) => {
  return stack(...listRange(0, times - 1).map((i) => func(pat.late(time*Math.pow(loss,i)), i)));
}

const a = bounceWith(10, 0.9, 4/5, (x, i) => x.speed((i+1)*0.2).pan(i*0.1), s("hh"))
const b = bounceWith(10, 0.9, 4/5, (x, i) => x.speed((i+1)*0.2).pan(i*0.1), s("casio:1"))
const c = bounceWith(10, 0.9, 4/5, (x, i) => x.speed((i+1)*0.2).pan(i*0.1), s("bleep:0"))
stack(a, b).slow(2)

arrange(
  [4, a], 
  [4, b.rev()],
  [4, c],
  [4, stack(a, c.rev())],
  [4, stack(a.rev(), c)],
  [4, stack(a, b.rev(), c)]
).slow("<1 3 2>/5")